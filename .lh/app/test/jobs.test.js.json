{
    "sourceFile": "app/test/jobs.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 167,
            "patches": [
                {
                    "date": 1658016228274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1658016259739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,6 @@\n var expect  = require(\"chai\").expect;\n var request = require(\"request\");\n+\n+describe(\"Color Code Converter API\", function() {\n+\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016273146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var expect  = require(\"chai\").expect;\n var request = require(\"request\");\n \n-describe(\"Color Code Converter API\", function() {\n+describe(\"test jobs APIs\", function() {\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016286087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,9 @@\n var request = require(\"request\");\n \n describe(\"test jobs APIs\", function() {\n \n+    before() {\n+        \n+    }\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016355937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n var request = require(\"request\");\n \n describe(\"test jobs APIs\", function() {\n \n-    before() {\n+    before(function(){\n         \n-    }\n+    }); \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016391202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,14 @@\n var expect  = require(\"chai\").expect;\n var request = require(\"request\");\n+const db = require(\"../models\");\n+const Constants = require(\"../config/constants.js\");\n+const Jobs = db.jobs;\n+const Users = db.user;\n \n describe(\"test jobs APIs\", function() {\n \n     before(function(){\n-        \n+\n     }); \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016464654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,7 +8,13 @@\n describe(\"test jobs APIs\", function() {\n \n     before(function(){\n \n+        Users.bulkCreate([\n+            { firstName: \"Nathan\", lastName: \"Sebhastian\" },\n+            { firstName: \"Jack\", lastName: \"Stark\" },\n+            { firstName: \"John\", lastName: \"Snow\" },\n+          ]).then(() => console.log(\"Users data have been saved\"));\n+\n     }); \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658016544289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,10 @@\n \n     before(function(){\n \n         Users.bulkCreate([\n-            { firstName: \"Nathan\", lastName: \"Sebhastian\" },\n-            { firstName: \"Jack\", lastName: \"Stark\" },\n-            { firstName: \"John\", lastName: \"Snow\" },\n+            { name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n \n"
                },
                {
                    "date": 1658016944731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,5 +15,10 @@\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n \n+\n+    after(function() {\n+        \n+    });\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658017015725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n describe(\"test jobs APIs\", function() {\n \n     before(function(){\n \n+        \n         Users.bulkCreate([\n             { name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n@@ -17,8 +18,8 @@\n     }); \n \n \n     after(function() {\n-        \n+\n     });\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658017108927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,18 @@\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n \n+    it('jobs filter ', async function () {\n+       \n+        \n+      });\n \n+      it('jobs sorted ', async function () {\n+       \n+        \n+    });\n+\n     after(function() {\n \n     });\n \n"
                },
                {
                    "date": 1658017233869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n describe(\"test jobs APIs\", function() {\n \n     before(function(){\n \n+        console.log('-----before-----')\n         \n         Users.bulkCreate([\n             { name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n"
                },
                {
                    "date": 1658017239979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n describe(\"test jobs APIs\", function() {\n \n     before(function(){\n \n-        console.log('-----before-----')\n+        console.log('-----before-----');\n         \n         Users.bulkCreate([\n             { name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n"
                },
                {
                    "date": 1658017315529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n \n         console.log('-----before-----');\n         \n         Users.bulkCreate([\n-            { name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+            { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n \n"
                },
                {
                    "date": 1658017340469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,13 +6,13 @@\n const Users = db.user;\n \n describe(\"test jobs APIs\", function() {\n \n-    before(function(){\n+    before(async function(){\n \n         console.log('-----before-----');\n         \n-        Users.bulkCreate([\n+        await Users.bulkCreate([\n             { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n"
                },
                {
                    "date": 1658017422335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,13 @@\n             { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n+          await Jobs.bulkCreate([\n+            { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+          ]).then(() => console.log(\"Users data have been saved\"));\n+\n     }); \n \n     it('jobs filter ', async function () {\n        \n"
                },
                {
                    "date": 1658017511208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n           await Jobs.bulkCreate([\n-            { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 3,name: \"firstJob\", status: 1,userId:1 },\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n"
                },
                {
                    "date": 1658017550201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,10 @@\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n           await Jobs.bulkCreate([\n             { id: 3,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 3,name: \"secondJob\", status: 1,userId:2 },\n+            { id: 3,name: \"thirdJob\", status: 1,userId:1 },\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n"
                },
                {
                    "date": 1658017558654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,9 @@\n \n           await Jobs.bulkCreate([\n             { id: 3,name: \"firstJob\", status: 1,userId:1 },\n             { id: 3,name: \"secondJob\", status: 1,userId:2 },\n-            { id: 3,name: \"thirdJob\", status: 1,userId:1 },\n-            { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+            { id: 3,name: \"thirdJob\", status: 1,userId:1 }\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n     }); \n \n"
                },
                {
                    "date": 1658017577193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,12 @@\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n           await Jobs.bulkCreate([\n-            { id: 3,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 3,name: \"secondJob\", status: 1,userId:2 },\n-            { id: 3,name: \"thirdJob\", status: 1,userId:1 }\n-          ]).then(() => console.log(\"Users data have been saved\"));\n+            { name: \"firstJob\", status: 1,userId:1 },\n+            { name: \"secondJob\", status: 1,userId:2 },\n+            { name: \"thirdJob\", status: 1,userId:1 }\n+          ]).then(() => console.log(\"jobs data have been saved\"));\n \n     }); \n \n     it('jobs filter ', async function () {\n"
                },
                {
                    "date": 1658017682316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n             { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]).then(() => console.log(\"Users data have been saved\"));\n \n           await Jobs.bulkCreate([\n-            { name: \"firstJob\", status: 1,userId:1 },\n-            { name: \"secondJob\", status: 1,userId:2 },\n-            { name: \"thirdJob\", status: 1,userId:1 }\n+            { id: 20,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 21, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n           ]).then(() => console.log(\"jobs data have been saved\"));\n \n     }); \n \n"
                },
                {
                    "date": 1658017763313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n     before(async function(){\n \n         console.log('-----before-----');\n         \n-        await Users.bulkCreate([\n-            { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n-          ]).then(() => console.log(\"Users data have been saved\"));\n+        // await Users.bulkCreate([\n+        //     { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+        //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+        //   ]).then(() => console.log(\"Users data have been saved\"));\n \n           await Jobs.bulkCreate([\n             { id: 20,name: \"firstJob\", status: 1,userId:1 },\n             { id: 21, name: \"secondJob\", status: 1,userId:2 },\n"
                },
                {
                    "date": 1658018078860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,22 +6,22 @@\n const Users = db.user;\n \n describe(\"test jobs APIs\", function() {\n \n-    before(async function(){\n+    before(function(){\n \n         console.log('-----before-----');\n         \n         // await Users.bulkCreate([\n         //     { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n         //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n         //   ]).then(() => console.log(\"Users data have been saved\"));\n \n-          await Jobs.bulkCreate([\n+         return  Jobs.bulkCreate([\n             { id: 20,name: \"firstJob\", status: 1,userId:1 },\n             { id: 21, name: \"secondJob\", status: 1,userId:2 },\n             { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n-          ]).then(() => console.log(\"jobs data have been saved\"));\n+          ]);\n \n     }); \n \n     it('jobs filter ', async function () {\n"
                },
                {
                    "date": 1658018132328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,25 @@\n           ]);\n \n     }); \n \n+    before(function(){\n+\n+        console.log('-----before-----');\n+        \n+        // await Users.bulkCreate([\n+        //     { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+        //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+        //   ]).then(() => console.log(\"Users data have been saved\"));\n+\n+         return  Jobs.bulkCreate([\n+            { id: 20,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 21, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n+          ]);\n+\n+    }); \n+\n     it('jobs filter ', async function () {\n        \n         \n       });\n"
                },
                {
                    "date": 1658018170162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,19 +27,19 @@\n     before(function(){\n \n         console.log('-----before-----');\n         \n-        // await Users.bulkCreate([\n-        //     { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-        //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n-        //   ]).then(() => console.log(\"Users data have been saved\"));\n-\n-         return  Jobs.bulkCreate([\n-            { id: 20,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 21, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n+        return Users.bulkCreate([\n+            { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 6, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n+        //  return  Jobs.bulkCreate([\n+        //     { id: 20,name: \"firstJob\", status: 1,userId:1 },\n+        //     { id: 21, name: \"secondJob\", status: 1,userId:2 },\n+        //     { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n+        //   ]);\n+\n     }); \n \n     it('jobs filter ', async function () {\n        \n"
                },
                {
                    "date": 1658018182793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         console.log('-----before-----');\n         \n         return Users.bulkCreate([\n             { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 6, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n+            { id: 6, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n         //  return  Jobs.bulkCreate([\n         //     { id: 20,name: \"firstJob\", status: 1,userId:1 },\n"
                },
                {
                    "date": 1658018226837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,11 @@\n         //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n         //   ]).then(() => console.log(\"Users data have been saved\"));\n \n          return  Jobs.bulkCreate([\n-            { id: 20,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 21, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n+            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n           ]);\n \n     }); \n \n"
                },
                {
                    "date": 1658018277565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,14 +9,9 @@\n \n     before(function(){\n \n         console.log('-----before-----');\n-        \n-        // await Users.bulkCreate([\n-        //     { id: 3,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-        //     { id: 4, name: \"Jack\", phone: \"0123458\" ,address: \"New market\"}\n-        //   ]).then(() => console.log(\"Users data have been saved\"));\n-\n+      \n          return  Jobs.bulkCreate([\n             { id: 24,name: \"firstJob\", status: 1,userId:1 },\n             { id: 25, name: \"secondJob\", status: 1,userId:2 },\n             { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n@@ -32,14 +27,8 @@\n             { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 6, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n-        //  return  Jobs.bulkCreate([\n-        //     { id: 20,name: \"firstJob\", status: 1,userId:1 },\n-        //     { id: 21, name: \"secondJob\", status: 1,userId:2 },\n-        //     { id: 22, name: \"thirdJob\", status: 1,userId:1 }\n-        //   ]);\n-\n     }); \n \n     it('jobs filter ', async function () {\n        \n"
                },
                {
                    "date": 1658018604577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,7 +41,9 @@\n     });\n \n     after(function() {\n \n+        return Jobs.destroy({ where: {}, truncate: true });\n+\n     });\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658018611953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,5 +45,11 @@\n         return Jobs.destroy({ where: {}, truncate: true });\n \n     });\n \n+    after(function() {\n+\n+        return Jobs.destroy({ where: {}, truncate: true });\n+\n+    });\n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658018632482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,31 +6,34 @@\n const Users = db.user;\n \n describe(\"test jobs APIs\", function() {\n \n+\n     before(function(){\n \n         console.log('-----before-----');\n-      \n-         return  Jobs.bulkCreate([\n-            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n+        \n+        return Users.bulkCreate([\n+            { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 6, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n     }); \n \n     before(function(){\n \n         console.log('-----before-----');\n-        \n-        return Users.bulkCreate([\n-            { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 6, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n+      \n+         return  Jobs.bulkCreate([\n+            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n           ]);\n \n     }); \n \n+ \n+\n     it('jobs filter ', async function () {\n        \n         \n       });\n"
                },
                {
                    "date": 1658018639306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n \n         console.log('-----before-----');\n         \n         return Users.bulkCreate([\n-            { id: 5,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 6, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n+            { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n     }); \n \n"
                },
                {
                    "date": 1658018658493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     });\n \n     after(function() {\n \n-        return Jobs.destroy({ where: {}, truncate: true });\n+        return Users.destroy({ where: {}, truncate: true });\n \n     });\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658018681276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n     });\n \n     after(function() {\n \n+        console.log('----jobs- destroy---');\n         return Jobs.destroy({ where: {}, truncate: true });\n \n     });\n \n"
                },
                {
                    "date": 1658018699048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n     });\n \n     after(function() {\n \n+        console.log('-----user --destroy-------');\n         return Users.destroy({ where: {}, truncate: true });\n \n     });\n \n"
                },
                {
                    "date": 1658018794282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \n     after(function() {\n \n         console.log('-----user --destroy-------');\n-        return Users.destroy({ where: {}, truncate: true });\n+        return Users.destroy({ where: {} });\n \n     });\n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658018800130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n \n     after(function() {\n \n         console.log('----jobs- destroy---');\n-        return Jobs.destroy({ where: {}, truncate: true });\n+        return Jobs.destroy({ where: {} });\n \n     });\n \n     after(function() {\n"
                },
                {
                    "date": 1658018911886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,17 +44,19 @@\n     });\n \n     after(function() {\n \n-        console.log('----jobs- destroy---');\n-        return Jobs.destroy({ where: {} });\n+        console.log('-----user --destroy-------');\n+        return Users.destroy({ where: {} });\n \n     });\n \n     after(function() {\n \n-        console.log('-----user --destroy-------');\n-        return Users.destroy({ where: {} });\n+        console.log('----jobs- destroy---');\n+        return Jobs.destroy({ where: {} });\n \n     });\n \n+ \n+\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658018918921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     }); \n \n     before(function(){\n \n-        console.log('-----before-----');\n+        console.log('-----before-2----');\n       \n          return  Jobs.bulkCreate([\n             { id: 24,name: \"firstJob\", status: 1,userId:1 },\n             { id: 25, name: \"secondJob\", status: 1,userId:2 },\n"
                },
                {
                    "date": 1658018954791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,21 +42,21 @@\n        \n         \n     });\n \n-    after(function() {\n+    // after(function() {\n \n-        console.log('-----user --destroy-------');\n-        return Users.destroy({ where: {} });\n+    //     console.log('-----user --destroy-------');\n+    //     return Users.destroy({ where: {} });\n \n-    });\n+    // });\n \n-    after(function() {\n+    // after(function() {\n \n-        console.log('----jobs- destroy---');\n-        return Jobs.destroy({ where: {} });\n+    //     console.log('----jobs- destroy---');\n+    //     return Jobs.destroy({ where: {} });\n \n-    });\n+    // });\n \n  \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658019089457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \n describe(\"test jobs APIs\", function() {\n \n \n-    before(function(){\n+    before(async function(){\n \n         console.log('-----before-----');\n         \n         return Users.bulkCreate([\n"
                },
                {
                    "date": 1658019100419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     before(async function(){\n \n         console.log('-----before-----');\n         \n-        return Users.bulkCreate([\n+       await  Users.bulkCreate([\n             { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n"
                },
                {
                    "date": 1658019116814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,14 @@\n             { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n+         awiat  Jobs.bulkCreate([\n+            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n+          ]);\n+\n     }); \n \n     before(function(){\n \n"
                },
                {
                    "date": 1658019130608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,27 +16,27 @@\n             { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n-         awiat  Jobs.bulkCreate([\n+         await Jobs.bulkCreate([\n             { id: 24,name: \"firstJob\", status: 1,userId:1 },\n             { id: 25, name: \"secondJob\", status: 1,userId:2 },\n             { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n           ]);\n \n     }); \n \n-    before(function(){\n+    // before(function(){\n \n-        console.log('-----before-2----');\n+    //     console.log('-----before-2----');\n       \n-         return  Jobs.bulkCreate([\n-            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n-          ]);\n+    //      return  Jobs.bulkCreate([\n+    //         { id: 24,name: \"firstJob\", status: 1,userId:1 },\n+    //         { id: 25, name: \"secondJob\", status: 1,userId:2 },\n+    //         { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n+    //       ]);\n \n-    }); \n+    // }); \n \n  \n \n     it('jobs filter ', async function () {\n"
                },
                {
                    "date": 1658019147336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n \n     before(async function(){\n \n         console.log('-----before-----');\n+\n+       await Users.destroy({ where: {} });\n         \n        await  Users.bulkCreate([\n             { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n"
                },
                {
                    "date": 1658019164104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n \n         console.log('-----before-----');\n \n        await Users.destroy({ where: {} });\n+\n+       await Jobs.destroy({ where: {} });\n         \n        await  Users.bulkCreate([\n             { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n"
                },
                {
                    "date": 1658019185195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n             { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n          await Jobs.bulkCreate([\n-            { id: 24,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 25, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n+            { id: 1,name: \"firstJob\", status: 1,userId:1 },\n+            { id: 2, name: \"secondJob\", status: 1,userId:2 },\n+            { id: 3, name: \"thirdJob\", status: 1,userId:1 }\n           ]);\n \n     }); \n \n"
                },
                {
                    "date": 1658019198620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n \n        await Jobs.destroy({ where: {} });\n         \n        await  Users.bulkCreate([\n-            { id: 1,name: \"Nathan\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 2, name: \"Amy\", phone: \"0123458\" ,address: \"New market\"}\n+            { id: 1,name: \"Alex\", phone: \"0221345\",address:\"Auckland\" },\n+            { id: 2, name: \"Adam\", phone: \"0123458\" ,address: \"New market\"}\n           ]);\n \n          await Jobs.bulkCreate([\n             { id: 1,name: \"firstJob\", status: 1,userId:1 },\n"
                },
                {
                    "date": 1658020659616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,22 +28,9 @@\n           ]);\n \n     }); \n \n-    // before(function(){\n \n-    //     console.log('-----before-2----');\n-      \n-    //      return  Jobs.bulkCreate([\n-    //         { id: 24,name: \"firstJob\", status: 1,userId:1 },\n-    //         { id: 25, name: \"secondJob\", status: 1,userId:2 },\n-    //         { id: 26, name: \"thirdJob\", status: 1,userId:1 }\n-    //       ]);\n-\n-    // }); \n-\n- \n-\n     it('jobs filter ', async function () {\n        \n         \n       });\n"
                },
                {
                    "date": 1658020846162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,21 +39,15 @@\n        \n         \n     });\n \n-    // after(function() {\n+    after(async function() {\n \n-    //     console.log('-----user --destroy-------');\n-    //     return Users.destroy({ where: {} });\n+        console.log('-----user --destroy-------');\n+        return Users.destroy({ where: {} });\n \n-    // });\n+    });\n \n-    // after(function() {\n-\n-    //     console.log('----jobs- destroy---');\n-    //     return Jobs.destroy({ where: {} });\n-\n-    // });\n-\n+    \n  \n \n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658020859068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,12 @@\n \n     after(async function() {\n \n         console.log('-----user --destroy-------');\n-        return Users.destroy({ where: {} });\n+        await Users.destroy({ where: {} });\n \n+        await Jobs.destroy({ where: {} });\n+\n     });\n \n     \n  \n"
                },
                {
                    "date": 1658020895498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,11 +42,12 @@\n \n     after(async function() {\n \n         console.log('-----user --destroy-------');\n+        await Jobs.destroy({ where: {} });\n         await Users.destroy({ where: {} });\n \n-        await Jobs.destroy({ where: {} });\n+       \n \n     });\n \n     \n"
                },
                {
                    "date": 1658021473249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n var expect  = require(\"chai\").expect;\n var request = require(\"request\");\n const db = require(\"../models\");\n const Constants = require(\"../config/constants.js\");\n+const app = require(\"../../server.js\");\n const Jobs = db.jobs;\n const Users = db.user;\n \n describe(\"test jobs APIs\", function() {\n"
                },
                {
                    "date": 1658021530955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,19 @@\n \n     }); \n \n \n-    it('jobs filter ', async function () {\n+    it('jobs filter ', async function (done) {\n+\n+        request(app)\n+        .get('/api/jobs')\n+        .expect('Content-Type', /json/)\n+        .expect(200)\n+        .end(function (err, res) {\n+          expect(err).to.be.null;\n+          expect(res.body).to.be.have.property('hello');\n+\n+          done();\n        \n         \n       });\n \n"
                },
                {
                    "date": 1658021702510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         .expect('Content-Type', /json/)\n         .expect(200)\n         .end(function (err, res) {\n           expect(err).to.be.null;\n-          expect(res.body).to.be.have.property('hello');\n+          expect(res.body).to..have.lengthOf(3);\n \n           done();\n        \n         \n"
                },
                {
                    "date": 1658021862083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,67 @@\n-var expect  = require(\"chai\").expect;\n+var expect = require(\"chai\").expect;\n var request = require(\"request\");\n const db = require(\"../models\");\n const Constants = require(\"../config/constants.js\");\n const app = require(\"../../server.js\");\n const Jobs = db.jobs;\n const Users = db.user;\n \n-describe(\"test jobs APIs\", function() {\n+describe(\"test jobs APIs\", function () {\n \n \n-    before(async function(){\n+    before(async function () {\n \n         console.log('-----before-----');\n \n-       await Users.destroy({ where: {} });\n+        await Users.destroy({ where: {} });\n \n-       await Jobs.destroy({ where: {} });\n-        \n-       await  Users.bulkCreate([\n-            { id: 1,name: \"Alex\", phone: \"0221345\",address:\"Auckland\" },\n-            { id: 2, name: \"Adam\", phone: \"0123458\" ,address: \"New market\"}\n-          ]);\n+        await Jobs.destroy({ where: {} });\n \n-         await Jobs.bulkCreate([\n-            { id: 1,name: \"firstJob\", status: 1,userId:1 },\n-            { id: 2, name: \"secondJob\", status: 1,userId:2 },\n-            { id: 3, name: \"thirdJob\", status: 1,userId:1 }\n-          ]);\n+        await Users.bulkCreate([\n+            { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n+            { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n+        ]);\n \n-    }); \n+        await Jobs.bulkCreate([\n+            { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+            { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n+            { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n+        ]);\n \n+    });\n \n+\n     it('jobs filter ', async function (done) {\n \n         request(app)\n-        .get('/api/jobs')\n-        .expect('Content-Type', /json/)\n-        .expect(200)\n-        .end(function (err, res) {\n-          expect(err).to.be.null;\n-          expect(res.body).to..have.lengthOf(3);\n+            .get('/api/jobs')\n+            .expect('Content-Type', /json/)\n+            .expect(200)\n+            .end(function (err, res) {\n+                expect(err).to.be.null;\n+                expect(res.body).to.have.lengthOf(3);\n \n-          done();\n-       \n\\ No newline at end of file\n-        \n-      });\n+                done();\n \n-      it('jobs sorted ', async function () {\n-       \n-        \n-    });\n \n-    after(async function() {\n+            });\n \n-        console.log('-----user --destroy-------');\n-        await Jobs.destroy({ where: {} });\n-        await Users.destroy({ where: {} });\n+        it('jobs sorted ', async function () {\n \n-       \n \n-    });\n+        });\n \n-    \n- \n+        after(async function () {\n \n-});\n+            console.log('-----user --destroy-------');\n+            await Jobs.destroy({ where: {} });\n+            await Users.destroy({ where: {} });\n+\n+\n+\n+        });\n+\n+\n+\n+\n+    });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1658021881171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,28 +8,28 @@\n \n describe(\"test jobs APIs\", function () {\n \n \n-    before(async function () {\n+    // before(async function () {\n \n-        console.log('-----before-----');\n+    //     console.log('-----before-----');\n \n-        await Users.destroy({ where: {} });\n+    //     await Users.destroy({ where: {} });\n \n-        await Jobs.destroy({ where: {} });\n+    //     await Jobs.destroy({ where: {} });\n \n-        await Users.bulkCreate([\n-            { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n-            { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n-        ]);\n+    //     await Users.bulkCreate([\n+    //         { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n+    //         { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n+    //     ]);\n \n-        await Jobs.bulkCreate([\n-            { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n-            { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n-            { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n-        ]);\n+    //     await Jobs.bulkCreate([\n+    //         { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+    //         { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n+    //         { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n+    //     ]);\n \n-    });\n+    // });\n \n \n     it('jobs filter ', async function (done) {\n \n"
                },
                {
                    "date": 1658021899597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,10 @@\n \n \n             });\n \n+        });\n+\n         it('jobs sorted ', async function () {\n \n \n         });\n"
                },
                {
                    "date": 1658021906419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,28 +8,28 @@\n \n describe(\"test jobs APIs\", function () {\n \n \n-    // before(async function () {\n+    before(async function () {\n \n-    //     console.log('-----before-----');\n+        console.log('-----before-----');\n \n-    //     await Users.destroy({ where: {} });\n+        await Users.destroy({ where: {} });\n \n-    //     await Jobs.destroy({ where: {} });\n+        await Jobs.destroy({ where: {} });\n \n-    //     await Users.bulkCreate([\n-    //         { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n-    //         { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n-    //     ]);\n+        await Users.bulkCreate([\n+            { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n+            { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n+        ]);\n \n-    //     await Jobs.bulkCreate([\n-    //         { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n-    //         { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n-    //         { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n-    //     ]);\n+        await Jobs.bulkCreate([\n+            { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+            { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n+            { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n+        ]);\n \n-    // });\n+    });\n \n \n     it('jobs filter ', async function (done) {\n \n"
                },
                {
                    "date": 1658022169616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,8 +32,10 @@\n \n \n     it('jobs filter ', async function (done) {\n \n+        let url = \n+\n         request(app)\n             .get('/api/jobs')\n             .expect('Content-Type', /json/)\n             .expect(200)\n"
                },
                {
                    "date": 1658022207181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n \n     it('jobs filter ', async function (done) {\n \n-        let url = \n+        let url =  \"http://localhost:8080/api/jobs?ordered=ASC&name=testjob\"\n \n         request(app)\n             .get('/api/jobs')\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658022217454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n \n     it('jobs filter ', async function (done) {\n \n-        let url =  \"http://localhost:8080/api/jobs?ordered=ASC&name=testjob\"\n+        let url =  \"http://localhost:8080/api/jobs?name=testjob\"\n \n         request(app)\n             .get('/api/jobs')\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658022223919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     it('jobs filter ', async function (done) {\n \n         let url =  \"http://localhost:8080/api/jobs?name=testjob\"\n \n-        request(app)\n+        request(url)\n             .get('/api/jobs')\n             .expect('Content-Type', /json/)\n             .expect(200)\n             .end(function (err, res) {\n"
                },
                {
                    "date": 1658022231453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,8 @@\n \n         let url =  \"http://localhost:8080/api/jobs?name=testjob\"\n \n         request(url)\n-            .get('/api/jobs')\n             .expect('Content-Type', /json/)\n             .expect(200)\n             .end(function (err, res) {\n                 expect(err).to.be.null;\n"
                },
                {
                    "date": 1658022241695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n \n     it('jobs filter ', async function (done) {\n \n-        let url =  \"http://localhost:8080/api/jobs?name=testjob\"\n+        let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n         request(url)\n             .expect('Content-Type', /json/)\n             .expect(200)\n"
                },
                {
                    "date": 1658022290181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,12 @@\n     it('jobs filter ', async function (done) {\n \n         let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n+        request(url, function(error, response, body) {\n+            expect(response.statusCode).to.equal(200);\n+          });\n+\n         request(url)\n             .expect('Content-Type', /json/)\n             .expect(200)\n             .end(function (err, res) {\n"
                },
                {
                    "date": 1658022309577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n         let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n+            expect(response.body).to.equal(200);\n           });\n \n         request(url)\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658022317322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n-            expect(response.body).to.equal(200);\n+            expect(response.body).to.to.have.lengthOf(3);\n           });\n \n         request(url)\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658022335515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,23 +36,11 @@\n         let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n-            expect(response.body).to.to.have.lengthOf(3);\n+            expect(response.body).to.have.lengthOf(3);\n           });\n \n-        request(url)\n-            .expect('Content-Type', /json/)\n-            .expect(200)\n-            .end(function (err, res) {\n-                expect(err).to.be.null;\n-                expect(res.body).to.have.lengthOf(3);\n-\n-                done();\n-\n-\n-            });\n-\n         });\n \n         it('jobs sorted ', async function () {\n \n"
                },
                {
                    "date": 1658022424596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n         let url =  \"http://localhost:8080/api/jobs?name=job\"\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n-            expect(response.body).to.have.lengthOf(3);\n+            expect(JSON.parse(response.body)).to.have.lengthOf(3);\n           });\n \n         });\n \n"
                },
                {
                    "date": 1658022464877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n             expect(JSON.parse(response.body)).to.have.lengthOf(3);\n+            done();\n           });\n \n         });\n \n"
                },
                {
                    "date": 1658022532215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n \n \n     it('jobs filter ', async function (done) {\n \n-        let url =  \"http://localhost:8080/api/jobs?name=job\"\n+        let url =  \"http://localhost:8080/api/jobs?name=job\";\n \n         request(url, function(error, response, body) {\n             expect(response.statusCode).to.equal(200);\n             expect(JSON.parse(response.body)).to.have.lengthOf(3);\n@@ -44,9 +44,11 @@\n         });\n \n         it('jobs sorted ', async function () {\n \n+            let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n \n+\n         });\n \n         after(async function () {\n \n"
                },
                {
                    "date": 1658022538957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n           });\n \n         });\n \n-        it('jobs sorted ', async function () {\n+        it('jobs sorted ', async function (done) {\n \n             let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n \n \n"
                },
                {
                    "date": 1658022550507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,15 @@\n         it('jobs sorted ', async function (done) {\n \n             let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n \n+            request(url, function(error, response, body) {\n+                expect(response.statusCode).to.equal(200);\n+                expect(JSON.parse(response.body)).to.have.lengthOf(3);\n+                done();\n+              });\n \n+\n         });\n \n         after(async function () {\n \n"
                },
                {
                    "date": 1658022741565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n \n             request(url, function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(response.body)).to.have.lengthOf(3);\n+                expect(JSON.parse(response.body)).to.be.ascendingBy(\"name\");\n                 done();\n               });\n \n \n"
                },
                {
                    "date": 1658022747120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n \n             request(url, function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(response.body)).to.have.lengthOf(3);\n-                expect(JSON.parse(response.body)).to.be.ascendingBy(\"name\");\n+                expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n                 done();\n               });\n \n \n"
                },
                {
                    "date": 1658022858238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n const Constants = require(\"../config/constants.js\");\n const app = require(\"../../server.js\");\n const Jobs = db.jobs;\n const Users = db.user;\n+chai.use(require(\"chai-sorted\"));\n \n describe(\"test jobs APIs\", function () {\n \n \n"
                },
                {
                    "date": 1658022910018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-var expect = require(\"chai\").expect;\n+var chai = require(\"chai\"),\n+    expect = chai.expect;\n var request = require(\"request\");\n const db = require(\"../models\");\n const Constants = require(\"../config/constants.js\");\n const app = require(\"../../server.js\");\n"
                },
                {
                    "date": 1658022960187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,8 @@\n             let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n \n             request(url, function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(response.body)).to.have.lengthOf(3);\n                 expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n                 done();\n               });\n \n"
                },
                {
                    "date": 1658023003274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,12 @@\n \n \n         });\n \n+        if('job status update',async function (done) { \n+            \n+        });\n+\n         after(async function () {\n \n             console.log('-----user --destroy-------');\n             await Jobs.destroy({ where: {} });\n"
                },
                {
                    "date": 1658023087737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,10 @@\n \n         });\n \n         if('job status update',async function (done) { \n-            \n+            let url = \"http://localhost:8080/api/jobs/1\";\n+\n         });\n \n         after(async function () {\n \n"
                },
                {
                    "date": 1658023243868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,10 @@\n \n         after(async function () {\n \n             console.log('-----user --destroy-------');\n-            await Jobs.destroy({ where: {} });\n-            await Users.destroy({ where: {} });\n+            // await Jobs.destroy({ where: {} });\n+            // await Users.destroy({ where: {} });\n \n \n \n         });\n"
                },
                {
                    "date": 1658023606091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,13 @@\n         });\n \n         if('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n+            request.put(url).body({\n+                \"status\":2}).then(response => {\n \n+                })\n+\n         });\n \n         after(async function () {\n \n"
                },
                {
                    "date": 1658023611482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n         if('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n             request.put(url).body({\n                 \"status\":2}).then(response => {\n-\n+                    expect(response.statusCode).to.equal(200);\n                 })\n \n         });\n \n"
                },
                {
                    "date": 1658023737126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,11 @@\n \n     before(async function () {\n \n         console.log('-----before-----');\n-\n+        await Jobs.destroy({ where: {} });\n         await Users.destroy({ where: {} });\n-\n-        await Jobs.destroy({ where: {} });\n-\n+        \n         await Users.bulkCreate([\n             { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n             { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n         ]);\n"
                },
                {
                    "date": 1658023773351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n \n         console.log('-----before-----');\n         await Jobs.destroy({ where: {} });\n         await Users.destroy({ where: {} });\n-        \n+\n         await Users.bulkCreate([\n             { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n             { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n         ]);\n@@ -60,8 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n             request.put(url).body({\n                 \"status\":2}).then(response => {\n                     expect(response.statusCode).to.equal(200);\n+                    done();\n                 })\n \n         });\n \n"
                },
                {
                    "date": 1658023785225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n         if('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n             request.put(url).body({\n-                \"status\":2}).then(response => {\n+                \"status\":2}).end(response => {\n                     expect(response.statusCode).to.equal(200);\n                     done();\n                 })\n \n"
                },
                {
                    "date": 1658023811914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \n \n         });\n \n-        if('job status update',async function (done) { \n+        it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n             request.put(url).body({\n                 \"status\":2}).end(response => {\n                     expect(response.statusCode).to.equal(200);\n"
                },
                {
                    "date": 1658023892726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,22 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n+            request\n+            .post('/post-name')\n+            .send({\n+              name: 'red hat'\n+            })\n+            .expect('Content-Type', /json/)\n+            .expect(200)\n+            .end(function (err, res) {\n+              expect(err).to.be.null;\n+              expect(res.body).to.be.have.property('name');\n+              expect(res.body.name).to.equal('red hat');\n+    \n+              done();\n+            });\n             request.put(url).body({\n                 \"status\":2}).end(response => {\n                     expect(response.statusCode).to.equal(200);\n                     done();\n"
                },
                {
                    "date": 1658023901600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n             request\n-            .post('/post-name')\n+            .post(url)\n             .send({\n               name: 'red hat'\n             })\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658023907567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n             request\n-            .post(url)\n+            .put(url)\n             .send({\n               name: 'red hat'\n             })\n             .expect('Content-Type', /json/)\n"
                },
                {
                    "date": 1658023923189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n             request\n             .put(url)\n             .send({\n-              name: 'red hat'\n+                \"status\":2\n             })\n             .expect('Content-Type', /json/)\n             .expect(200)\n             .end(function (err, res) {\n"
                },
                {
                    "date": 1658023932206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,13 +71,13 @@\n               expect(res.body.name).to.equal('red hat');\n     \n               done();\n             });\n-            request.put(url).body({\n-                \"status\":2}).end(response => {\n-                    expect(response.statusCode).to.equal(200);\n-                    done();\n-                })\n+            // request.put(url).body({\n+            //     \"status\":2}).end(response => {\n+            //         expect(response.statusCode).to.equal(200);\n+            //         done();\n+            //     })\n \n         });\n \n         after(async function () {\n"
                },
                {
                    "date": 1658023943114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,8 @@\n             .put(url)\n             .send({\n                 \"status\":2\n             })\n-            .expect('Content-Type', /json/)\n             .expect(200)\n             .end(function (err, res) {\n               expect(err).to.be.null;\n               expect(res.body).to.be.have.property('name');\n"
                },
                {
                    "date": 1658023965673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n             })\n             .expect(200)\n             .end(function (err, res) {\n               expect(err).to.be.null;\n-              expect(res.body).to.be.have.property('name');\n+              expect(res.body).to.be.have.property('message');\n               expect(res.body.name).to.equal('red hat');\n     \n               done();\n             });\n"
                },
                {
                    "date": 1658023983233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             .expect(200)\n             .end(function (err, res) {\n               expect(err).to.be.null;\n               expect(res.body).to.be.have.property('message');\n-              expect(res.body.name).to.equal('red hat');\n+              expect(res.body.message).to.equal('red hat');\n     \n               done();\n             });\n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024000229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             .expect(200)\n             .end(function (err, res) {\n               expect(err).to.be.null;\n               expect(res.body).to.be.have.property('message');\n-              expect(res.body.message).to.equal('red hat');\n+              expect(res.body.message).to.equal('Jobs was updated successfully.');\n     \n               done();\n             });\n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024449870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,21 +57,9 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n-            request\n-            .put(url)\n-            .send({\n-                \"status\":2\n-            })\n-            .expect(200)\n-            .end(function (err, res) {\n-              expect(err).to.be.null;\n-              expect(res.body).to.be.have.property('message');\n-              expect(res.body.message).to.equal('Jobs was updated successfully.');\n-    \n-              done();\n-            });\n+            chai.request('http://localhost:8080').put('api/jobs/1')\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n             //         done();\n"
                },
                {
                    "date": 1658024482855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n-            chai.request('http://localhost:8080').put('api/jobs/1')\n+            chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2})\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n             //         done();\n"
                },
                {
                    "date": 1658024519121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,15 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n-            chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2})\n+            chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n+                res.should.have.status(200);\n+                res.body.should.be.a('object');\n+                res.body.should.have.property('message').eql('Book updated!');\n+                res.body.book.should.have.property('year').eql(1950);\n+            done();\n+          });\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n             //         done();\n"
                },
                {
                    "date": 1658024544220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n             chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n                 res.should.have.status(200);\n                 res.body.should.be.a('object');\n-                res.body.should.have.property('message').eql('Book updated!');\n+                res.body.should.have.property('message').eql('Jobs was updated successfully.');\n                 res.body.book.should.have.property('year').eql(1950);\n             done();\n           });\n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024550246,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n             chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n                 res.should.have.status(200);\n                 res.body.should.be.a('object');\n                 res.body.should.have.property('message').eql('Jobs was updated successfully.');\n-                res.body.book.should.have.property('year').eql(1950);\n+               \n             done();\n           });\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n"
                },
                {
                    "date": 1658024587898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n-            chai.request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n+            request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n                 res.should.have.status(200);\n                 res.body.should.be.a('object');\n                 res.body.should.have.property('message').eql('Jobs was updated successfully.');\n                \n"
                },
                {
                    "date": 1658024664930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,10 @@\n         });\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n+\n+            request({ url: url, method: 'PUT', json: {\"status\":2}, callback)\n             request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n                 res.should.have.status(200);\n                 res.body.should.be.a('object');\n                 res.body.should.have.property('message').eql('Jobs was updated successfully.');\n"
                },
                {
                    "date": 1658024676404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,13 @@\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n-            request({ url: url, method: 'PUT', json: {\"status\":2}, callback)\n+            request({ url: url, method: 'PUT', json: {\"status\":2},function(error, response, body) {\n+                expect(response.statusCode).to.equal(200);\n+                expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n+                done();\n+              });\n             request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n                 res.should.have.status(200);\n                 res.body.should.be.a('object');\n                 res.body.should.have.property('message').eql('Jobs was updated successfully.');\n"
                },
                {
                    "date": 1658024703286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n \n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n-            request({ url: url, method: 'PUT', json: {\"status\":2},function(error, response, body) {\n+            request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n                 done();\n               });\n"
                },
                {
                    "date": 1658024711337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,14 +63,9 @@\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n                 done();\n               });\n-            request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n-                res.should.have.status(200);\n-                res.body.should.be.a('object');\n-                res.body.should.have.property('message').eql('Jobs was updated successfully.');\n-               \n-            done();\n+            \n           });\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n"
                },
                {
                    "date": 1658024760471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,12 +60,17 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n+                expect(JSON.parse(response.body)).should.have.property('message').eql('Jobs was updated successfully.');;\n                 done();\n               });\n-            \n+            request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n+                res.should.have.status(200);\n+                res.body.should.be.a('object');\n+                res.body.should.have.property('message').eql('Jobs was updated successfully.');\n+               \n+            done();\n           });\n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n"
                },
                {
                    "date": 1658024766626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,9 @@\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(response.body)).should.have.property('message').eql('Jobs was updated successfully.');;\n                 done();\n               });\n-            request('http://localhost:8080').put('api/jobs/1').send({\"status\":2}).end((err, res) => {\n-                res.should.have.status(200);\n-                res.body.should.be.a('object');\n-                res.body.should.have.property('message').eql('Jobs was updated successfully.');\n-               \n-            done();\n-          });\n+        \n             // request.put(url).body({\n             //     \"status\":2}).end(response => {\n             //         expect(response.statusCode).to.equal(200);\n             //         done();\n"
                },
                {
                    "date": 1658024797127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(response.body)).should.have.property('message').eql('Jobs was updated successfully.');;\n+                expect(response.body).should.have.property('message').eql('Jobs was updated successfully.');;\n                 done();\n               });\n         \n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024822080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).should.have.property('message').eql('Jobs was updated successfully.');;\n+                expect(response.body).should.have.property('message').eql('Jobs was updated successfully.');\n                 done();\n               });\n         \n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024828012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).should.have.property('message').eql('Jobs was updated successfully.');\n+                \n                 done();\n               });\n         \n             // request.put(url).body({\n"
                },
                {
                    "date": 1658024850321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,15 +63,8 @@\n                 expect(response.statusCode).to.equal(200);\n                 \n                 done();\n               });\n-        \n-            // request.put(url).body({\n-            //     \"status\":2}).end(response => {\n-            //         expect(response.statusCode).to.equal(200);\n-            //         done();\n-            //     })\n-\n         });\n \n         after(async function () {\n \n"
                },
                {
                    "date": 1658024919508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n+                console.log(JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n                 \n                 done();\n               });\n"
                },
                {
                    "date": 1658024984001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n-                console.log(JSON.stringify(response.body))\n+                console.log('-------------'+JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n                 \n                 done();\n               });\n"
                },
                {
                    "date": 1658024990575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n-                console.log('-------------'+JSON.stringify(response.body))\n+                console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n                 \n                 done();\n               });\n"
                },
                {
                    "date": 1658025030587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                \n+                expect(response.statusCode).to.equal(200);\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025151911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.statusCode).to.equal(200);\n+                expect(response.statusCode).to.have.own.property('a');;\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025164390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.statusCode).to.have.own.property('a');;\n+                expect(response.body).to.have.own.property('a');;\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025169872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.own.property('a');;\n+                expect(response.body).to.have.own.property('message');;\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025176937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.own.property('message');;\n+                expect(response.body).to.have.own.property('message');\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025238519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.own.property('message');\n+                expect(JSON.parse(response.body)).to.have.own.property('message');\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025271754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response))\n                 expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(response.body)).to.have.own.property('message');\n+                expect(JSON.parse(JSON.stringify(response.body))).to.have.own.property('message');\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025317612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         it('job status update',async function (done) { \n             let url = \"http://localhost:8080/api/jobs/1\";\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n-                console.log('-------------'+JSON.stringify(response))\n+                console.log('-------------'+JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n                 expect(JSON.parse(JSON.stringify(response.body))).to.have.own.property('message');\n                 done();\n               });\n"
                },
                {
                    "date": 1658025355750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(JSON.stringify(response.body))).to.have.own.property('message');\n+                expect(response.body).to.have.own.property('message');\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025378946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.own.property('message');\n+                expect(response.body).to.have.property('message');\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025457702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n             request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n                 console.log('-------------'+JSON.stringify(response.body))\n                 expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.property('message');\n+                expect(response.body).to.have.property('message').to.eq('Jobs was updated successfully.');;\n                 done();\n               });\n         });\n \n"
                },
                {
                    "date": 1658025478822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,10 @@\n \n         after(async function () {\n \n             console.log('-----user --destroy-------');\n-            // await Jobs.destroy({ where: {} });\n-            // await Users.destroy({ where: {} });\n+            await Jobs.destroy({ where: {} });\n+            await Users.destroy({ where: {} });\n \n \n \n         });\n"
                },
                {
                    "date": 1658025521058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n var chai = require(\"chai\"),\n-    expect = chai.expect;\n+  expect = chai.expect;\n var request = require(\"request\");\n const db = require(\"../models\");\n const Constants = require(\"../config/constants.js\");\n const app = require(\"../../server.js\");\n@@ -8,76 +8,58 @@\n const Users = db.user;\n chai.use(require(\"chai-sorted\"));\n \n describe(\"test jobs APIs\", function () {\n+  before(async function () {\n+   \n+    await Jobs.destroy({ where: {} });\n+    await Users.destroy({ where: {} });\n \n+    await Users.bulkCreate([\n+      { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n+      { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" },\n+    ]);\n \n-    before(async function () {\n+    await Jobs.bulkCreate([\n+      { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+      { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n+      { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n+    ]);\n+  });\n \n-        console.log('-----before-----');\n-        await Jobs.destroy({ where: {} });\n-        await Users.destroy({ where: {} });\n+  it(\"jobs filter \", async function (done) {\n+    let url = \"http://localhost:8080/api/jobs?name=job\";\n \n-        await Users.bulkCreate([\n-            { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n-            { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" }\n-        ]);\n+    request(url, function (error, response, body) {\n+      expect(response.statusCode).to.equal(200);\n+      expect(JSON.parse(response.body)).to.have.lengthOf(3);\n+      done();\n+    });\n+  });\n \n-        await Jobs.bulkCreate([\n-            { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n-            { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n-            { id: 3, name: \"thirdJob\", status: 1, userId: 1 }\n-        ]);\n+  it(\"jobs sorted \", async function (done) {\n+    let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n \n+    request(url, function (error, response, body) {\n+      expect(response.statusCode).to.equal(200);\n+      expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n+      done();\n     });\n+  });\n \n+  it(\"job status update\", async function (done) {\n+    let url = \"http://localhost:8080/api/jobs/1\";\n \n-    it('jobs filter ', async function (done) {\n+    request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n+      console.log(\"-------------\" + JSON.stringify(response.body));\n+      expect(response.statusCode).to.equal(200);\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+      done();\n+    });\n+  });\n \n-        let url =  \"http://localhost:8080/api/jobs?name=job\";\n-\n-        request(url, function(error, response, body) {\n-            expect(response.statusCode).to.equal(200);\n-            expect(JSON.parse(response.body)).to.have.lengthOf(3);\n-            done();\n-          });\n-\n-        });\n-\n\\ No newline at end of file\n-        it('jobs sorted ', async function (done) {\n-\n-            let url = \"http://localhost:8080/api/jobs?ordered=ASC\";\n-\n-            request(url, function(error, response, body) {\n-                expect(response.statusCode).to.equal(200);\n-                expect(JSON.parse(response.body)).to.be.ascendingBy(\"id\");\n-                done();\n-              });\n-\n-\n-        });\n-\n-        it('job status update',async function (done) { \n-            let url = \"http://localhost:8080/api/jobs/1\";\n-\n-            request({ url: url, method: 'PUT', json: {\"status\":2}},function(error, response, body) {\n-                console.log('-------------'+JSON.stringify(response.body))\n-                expect(response.statusCode).to.equal(200);\n-                expect(response.body).to.have.property('message').to.eq('Jobs was updated successfully.');;\n-                done();\n-              });\n-        });\n-\n-        after(async function () {\n-\n-            console.log('-----user --destroy-------');\n-            await Jobs.destroy({ where: {} });\n-            await Users.destroy({ where: {} });\n-\n-\n-\n-        });\n-\n-\n-\n-\n-    });\n+  after(async function () {\n+    console.log(\"-----user --destroy-------\");\n+    await Jobs.destroy({ where: {} });\n+    await Users.destroy({ where: {} });\n+  });\n+});\n"
                },
                {
                    "date": 1658025528070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n   it(\"job status update\", async function (done) {\n     let url = \"http://localhost:8080/api/jobs/1\";\n \n     request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n-      console.log(\"-------------\" + JSON.stringify(response.body));\n+      \n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n       done();\n     });\n"
                },
                {
                    "date": 1658025535084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,8 @@\n     });\n   });\n \n   after(async function () {\n-    console.log(\"-----user --destroy-------\");\n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n   });\n });\n"
                },
                {
                    "date": 1658025658921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,8 +56,12 @@\n       done();\n     });\n   });\n \n+  it(\"note creates \", async function(done) {\n+\n+  });\n+\n   after(async function () {\n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n   });\n"
                },
                {
                    "date": 1658025673993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n     });\n   });\n \n   it(\"note creates \", async function(done) {\n+    let url = \n \n   });\n \n   after(async function () {\n"
                },
                {
                    "date": 1658025721533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n     });\n   });\n \n   it(\"note creates \", async function(done) {\n-    let url = \n+    let url = \"http://localhost:8080/api/notes\"\n \n   });\n \n   after(async function () {\n"
                },
                {
                    "date": 1658025741706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,17 @@\n     });\n   });\n \n   it(\"note creates \", async function(done) {\n-    let url = \"http://localhost:8080/api/notes\"\n+    let url = \"http://localhost:8080/api/notes\";\n+    request({ url: url, method: \"POST\", json: { status: 2 } }, function (error, response, body) {\n+      \n+        expect(response.statusCode).to.equal(200);\n+        expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+        done();\n+      });\n \n+\n   });\n \n   after(async function () {\n     await Jobs.destroy({ where: {} });\n"
                },
                {
                    "date": 1658025785391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,12 @@\n   });\n \n   it(\"note creates \", async function(done) {\n     let url = \"http://localhost:8080/api/notes\";\n-    request({ url: url, method: \"POST\", json: { status: 2 } }, function (error, response, body) {\n+    request({ url: url, method: \"POST\", json: {\n+        \"jobId\":1,\n+        \"description\":\"testjobs3 notes\"\n+    }}, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658025870588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,21 +56,25 @@\n       done();\n     });\n   });\n \n-  it(\"note creates \", async function(done) {\n+  it(\"note creates \", async function (done) {\n     let url = \"http://localhost:8080/api/notes\";\n-    request({ url: url, method: \"POST\", json: {\n-        \"jobId\":1,\n-        \"description\":\"testjobs3 notes\"\n-    }}, function (error, response, body) {\n-      \n+    request(\n+      {\n+        url: url,\n+        method: \"POST\",\n+        json: {\n+          jobId: 1,\n+          description: \"testjobs3 notes\",\n+        },\n+      },\n+      function (error, response, body) {\n         expect(response.statusCode).to.equal(200);\n-        expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+        expect(response.body).to.have.property(\"jobId\").to.eq(\"Jobs was updated successfully.\");\n         done();\n-      });\n-\n-\n+      }\n+    );\n   });\n \n   after(async function () {\n     await Jobs.destroy({ where: {} });\n"
                },
                {
                    "date": 1658025876640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         },\n       },\n       function (error, response, body) {\n         expect(response.statusCode).to.equal(200);\n-        expect(response.body).to.have.property(\"jobId\").to.eq(\"Jobs was updated successfully.\");\n+        expect(response.body).to.have.property(\"jobId\").to.eq(1);\n         done();\n       }\n     );\n   });\n"
                },
                {
                    "date": 1658025977384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,14 @@\n       }\n     );\n   });\n \n+  it(\"notes update\", async function(done){\n+\n+    let url = \"http://localhost:8080/api/notes/1\";\n+\n+  });\n+\n   after(async function () {\n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n   });\n"
                },
                {
                    "date": 1658025998486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,14 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n+    request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n+      \n+        expect(response.statusCode).to.equal(200);\n+        expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+        done();\n+      });\n \n   });\n \n   after(async function () {\n"
                },
                {
                    "date": 1658026013004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n+    request({ url: url, method: \"PUT\", json: { description: \"changed\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658026067532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n     let url = \"http://localhost:8080/api/notes/1\";\n     request({ url: url, method: \"PUT\", json: { description: \"changed\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n-        expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+        expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n         done();\n       });\n \n   });\n"
                },
                {
                    "date": 1658026174432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { description: \"changed\" } }, function (error, response, body) {\n+    request({ url: url, method: \"PUT\", json: { \t\"jobId\":1, description: \"changed\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658026204354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { \t\"jobId\":1, description: \"changed\" } }, function (error, response, body) {\n+    request({ url: url, method: \"PUT\", json: { \tjobId:1, description: \"changed\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658026297534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { \tjobId:1, description: \"changed\" } }, function (error, response, body) {\n+    request({ url: url, method: \"PUT\", json: { jobId:1, context: \"changed\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658026369778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n \n   it(\"notes update\", async function(done){\n \n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { jobId:1, context: \"changed\" } }, function (error, response, body) {\n+    request({ url: url, method: \"PUT\", json: { jobId:1, context: \"note changes\" } }, function (error, response, body) {\n       \n         expect(response.statusCode).to.equal(200);\n         expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n         done();\n"
                },
                {
                    "date": 1658026525776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n const Constants = require(\"../config/constants.js\");\n const app = require(\"../../server.js\");\n const Jobs = db.jobs;\n const Users = db.user;\n+const Notes = db.notes;\n chai.use(require(\"chai-sorted\"));\n \n describe(\"test jobs APIs\", function () {\n   before(async function () {\n"
                },
                {
                    "date": 1658026540183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n   before(async function () {\n    \n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n+    await Notes.destroy({ where: {} });\n \n     await Users.bulkCreate([\n       { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n       { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" },\n"
                },
                {
                    "date": 1658026548883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,6 +92,7 @@\n \n   after(async function () {\n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n+    await Notes.destroy({ where: {} });\n   });\n });\n"
                },
                {
                    "date": 1658026570467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,8 @@\n chai.use(require(\"chai-sorted\"));\n \n describe(\"test jobs APIs\", function () {\n   before(async function () {\n-   \n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n     await Notes.destroy({ where: {} });\n \n@@ -51,9 +50,8 @@\n   it(\"job status update\", async function (done) {\n     let url = \"http://localhost:8080/api/jobs/1\";\n \n     request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n-      \n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n       done();\n     });\n@@ -77,18 +75,15 @@\n       }\n     );\n   });\n \n-  it(\"notes update\", async function(done){\n-\n+  it(\"notes update\", async function (done) {\n     let url = \"http://localhost:8080/api/notes/1\";\n-    request({ url: url, method: \"PUT\", json: { jobId:1, context: \"note changes\" } }, function (error, response, body) {\n-      \n-        expect(response.statusCode).to.equal(200);\n-        expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n-        done();\n-      });\n-\n+    request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n+      expect(response.statusCode).to.equal(200);\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n+      done();\n+    });\n   });\n \n   after(async function () {\n     await Jobs.destroy({ where: {} });\n"
                },
                {
                    "date": 1658026664344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,13 @@\n     );\n   });\n \n   it(\"notes update\", async function (done) {\n+    await Users.bulkCreate([\n+        { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n+        { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" },\n+      ]);\n+      \n     let url = \"http://localhost:8080/api/notes/1\";\n     request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n"
                },
                {
                    "date": 1658026692858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,13 +76,9 @@\n     );\n   });\n \n   it(\"notes update\", async function (done) {\n-    await Users.bulkCreate([\n-        { id: 1, name: \"Alex\", phone: \"0221345\", address: \"Auckland\" },\n-        { id: 2, name: \"Adam\", phone: \"0123458\", address: \"New market\" },\n-      ]);\n-      \n+    \n     let url = \"http://localhost:8080/api/notes/1\";\n     request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n"
                },
                {
                    "date": 1658026728768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,12 @@\n       { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n       { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n+\n+    await Notes.bulkCreate([\n+        \n+    ]);\n   });\n \n   it(\"jobs filter \", async function (done) {\n     let url = \"http://localhost:8080/api/jobs?name=job\";\n"
                },
                {
                    "date": 1658026743089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        \n+        { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+        { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n     ]);\n   });\n \n   it(\"jobs filter \", async function (done) {\n"
                },
                {
                    "date": 1658026750448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        { id: 1, name: \"firstJob\", status: 1, userId: 1 },\n+        { id: 1, jobId: \"firstJob\", status: 1, userId: 1 },\n         { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n     ]);\n   });\n \n"
                },
                {
                    "date": 1658026766492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        { id: 1, jobId: \"firstJob\", status: 1, userId: 1 },\n+        { id: 1, jobId: \"context\", status: 1, userId: 1 },\n         { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n     ]);\n   });\n \n"
                },
                {
                    "date": 1658026776014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        { id: 1, jobId: \"context\", status: 1, userId: 1 },\n+        { id: 1, jobId: \"context\" },\n         { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n     ]);\n   });\n \n"
                },
                {
                    "date": 1658026783230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     ]);\n \n     await Notes.bulkCreate([\n         { id: 1, jobId: \"context\" },\n-        { id: 2, name: \"secondJob\", status: 1, userId: 2 },\n+        { id: 2, name: \"secondJob\" },\n     ]);\n   });\n \n   it(\"jobs filter \", async function (done) {\n"
                },
                {
                    "date": 1658026805213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        { id: 1, jobId: \"context\" },\n+        { id: 1, jobId:1, context:\"job 1 notes\" },\n         { id: 2, name: \"secondJob\" },\n     ]);\n   });\n \n"
                },
                {
                    "date": 1658026831985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     ]);\n \n     await Notes.bulkCreate([\n         { id: 1, jobId:1, context:\"job 1 notes\" },\n-        { id: 2, name: \"secondJob\" },\n+        { id: 2, jobId:2, name: \"job 2 note\" },\n     ]);\n   });\n \n   it(\"jobs filter \", async function (done) {\n"
                },
                {
                    "date": 1658026837263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n       { id: 3, name: \"thirdJob\", status: 1, userId: 1 },\n     ]);\n \n     await Notes.bulkCreate([\n-        { id: 1, jobId:1, context:\"job 1 notes\" },\n+        { id: 1, jobId:1, context:\"job 1 note\" },\n         { id: 2, jobId:2, name: \"job 2 note\" },\n     ]);\n   });\n \n"
                },
                {
                    "date": 1658028002740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,18 @@\n       done();\n     });\n   });\n \n+  it(\"job status update fail\", async function (done) {\n+    let url = \"http://localhost:8080/api/jobs/1\";\n+\n+    request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n+      expect(response.statusCode).to.equal(200);\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+      done();\n+    });\n+  });\n+\n   it(\"note creates \", async function (done) {\n     let url = \"http://localhost:8080/api/notes\";\n     request(\n       {\n"
                },
                {
                    "date": 1658028042145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     });\n   });\n \n   it(\"job status update fail\", async function (done) {\n-    let url = \"http://localhost:8080/api/jobs/1\";\n+    let url = \"http://localhost:8080/api/jobs/4\";\n \n     request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n"
                },
                {
                    "date": 1658028077635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n     let url = \"http://localhost:8080/api/jobs/4\";\n \n     request({ url: url, method: \"PUT\", json: { status: 2 } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n-      expect(response.body).to.have.property(\"message\").to.eq(\"Jobs was updated successfully.\");\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Cannot update Jobs with id=4. Maybe Jobs was not found or req.body is empty!\");\n       done();\n     });\n   });\n \n"
                },
                {
                    "date": 1658028193582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,8 +100,18 @@\n       done();\n     });\n   });\n \n+  it(\"notes update fail\", async function (done) {\n+    \n+    let url = \"http://localhost:8080/api/notes/1\";\n+    request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n+      expect(response.statusCode).to.equal(200);\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n+      done();\n+    });\n+  });\n+\n   after(async function () {\n     await Jobs.destroy({ where: {} });\n     await Users.destroy({ where: {} });\n     await Notes.destroy({ where: {} });\n"
                },
                {
                    "date": 1658028247065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n     \n     let url = \"http://localhost:8080/api/notes/1\";\n     request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n-      expect(response.body).to.have.property(\"message\").to.eq(\"Notes was updated successfully.\");\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Cannot update Notes with id=${id}. Maybe note was not found or req.body is empty!\");\n       done();\n     });\n   });\n \n"
                },
                {
                    "date": 1658028293084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   });\n \n   it(\"notes update fail\", async function (done) {\n     \n-    let url = \"http://localhost:8080/api/notes/1\";\n+    let url = \"http://localhost:8080/api/notes/4\";\n     request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n       expect(response.body).to.have.property(\"message\").to.eq(\"Cannot update Notes with id=${id}. Maybe note was not found or req.body is empty!\");\n       done();\n"
                },
                {
                    "date": 1658028299173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n     \n     let url = \"http://localhost:8080/api/notes/4\";\n     request({ url: url, method: \"PUT\", json: { jobId: 1, context: \"note changes\" } }, function (error, response, body) {\n       expect(response.statusCode).to.equal(200);\n-      expect(response.body).to.have.property(\"message\").to.eq(\"Cannot update Notes with id=${id}. Maybe note was not found or req.body is empty!\");\n+      expect(response.body).to.have.property(\"message\").to.eq(\"Cannot update Notes with id=4. Maybe note was not found or req.body is empty!\");\n       done();\n     });\n   });\n \n"
                }
            ],
            "date": 1658016228274,
            "name": "Commit-0",
            "content": "var expect  = require(\"chai\").expect;\nvar request = require(\"request\");\n"
        }
    ]
}