{
    "sourceFile": "app/models/jobs.model.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1657948310567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1657948325421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n module.exports = (sequelize, Sequelize) => {\n-    const Status = sequelize.define(\"status\", {\n+    const Job = sequelize.define(\"job\", {\n       key: {\n         type: Sequelize.STRING\n       },\n       label: {\n"
                },
                {
                    "date": 1657948375530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n-      key: {\n+      status: {\n         type: Sequelize.STRING\n       },\n       label: {\n         type: Sequelize.STRING\n       }\n     });\n   \n-    return Status;\n+    return Job;\n   };\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1657948392390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     const Job = sequelize.define(\"job\", {\n       status: {\n         type: Sequelize.STRING\n       },\n-      label: {\n+      creatTime: {\n         type: Sequelize.STRING\n       }\n     });\n   \n"
                },
                {
                    "date": 1657948419398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,11 @@\n         type: Sequelize.STRING\n       },\n       creatTime: {\n         type: Sequelize.STRING\n+      },\n+      userId: {\n+        type: Sequelize.STRING\n       }\n     });\n   \n     return Job;\n"
                },
                {
                    "date": 1657948741138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n       creatTime: {\n         type: Sequelize.STRING\n       },\n       userId: {\n-        type: Sequelize.STRING\n+        type: Sequelize.BIGINT(11)\n       }\n     });\n   \n     return Job;\n"
                },
                {
                    "date": 1657948841979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n       status: {\n-        type: Sequelize.STRING\n+        type: Sequelize.INTEGER\n       },\n       creatTime: {\n         type: Sequelize.STRING\n       },\n       userId: {\n-        type: Sequelize.BIGINT(11)\n+        type: Sequelize.BIGINT\n       }\n     });\n   \n     return Job;\n"
                },
                {
                    "date": 1657948871657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n     const Job = sequelize.define(\"job\", {\n       status: {\n         type: Sequelize.INTEGER\n       },\n-      creatTime: {\n-        type: Sequelize.STRING\n-      },\n       userId: {\n         type: Sequelize.BIGINT\n       }\n     });\n"
                },
                {
                    "date": 1657948917026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,11 @@\n     const Job = sequelize.define(\"job\", {\n       status: {\n         type: Sequelize.INTEGER\n       },\n+      name: {\n+        type: Sequelize.STRING\n+      },\n       userId: {\n         type: Sequelize.BIGINT\n       }\n     });\n"
                },
                {
                    "date": 1657948928369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n+    \n+      name: {\n+        type: Sequelize.STRING\n+      },\n       status: {\n         type: Sequelize.INTEGER\n       },\n-      name: {\n-        type: Sequelize.STRING\n-      },\n       userId: {\n         type: Sequelize.BIGINT\n       }\n     });\n"
                },
                {
                    "date": 1657949522206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,14 @@\n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n-    \n       name: {\n         type: Sequelize.STRING\n       },\n       status: {\n         type: Sequelize.INTEGER\n       },\n       userId: {\n-        type: Sequelize.BIGINT\n+        type: Sequelize.INTEGER\n       }\n     });\n   \n     return Job;\n"
                },
                {
                    "date": 1657952728579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,10 @@\n       status: {\n         type: Sequelize.INTEGER\n       },\n       userId: {\n-        type: Sequelize.INTEGER\n+        type: Sequelize.INTEGER,\n+        allowNull: false\n       }\n     });\n   \n     return Job;\n"
                },
                {
                    "date": 1657955936450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+const user = require(\"./user.model.js\")\n+\n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n       name: {\n         type: Sequelize.STRING\n"
                },
                {
                    "date": 1657956142563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n         type: Sequelize.INTEGER,\n         allowNull: false\n       }\n     });\n+\n+    user.belongsTo(Job);\n   \n     return Job;\n   };\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1657956287262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,11 @@\n         allowNull: false\n       }\n     });\n \n-    user.belongsTo(Job);\n+    User.hasOne(Invoice, {\n+        foreignKey: \"invoice_creator\", // UserId -> invoice_creator\n+      });\n   \n     return Job;\n   };\n   \n\\ No newline at end of file\n"
                },
                {
                    "date": 1657956295652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n       }\n     });\n \n     User.hasOne(Invoice, {\n-        foreignKey: \"invoice_creator\", // UserId -> invoice_creator\n+        foreignKey: \"userId\", // UserId -> invoice_creator\n       });\n   \n     return Job;\n   };\n"
                },
                {
                    "date": 1657956304241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n       }\n     });\n \n     User.hasOne(Invoice, {\n-        foreignKey: \"userId\", // UserId -> invoice_creator\n+        foreignKey: \"userId\", \n       });\n   \n     return Job;\n   };\n"
                },
                {
                    "date": 1657956353569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         allowNull: false\n       }\n     });\n \n-    User.hasOne(Invoice, {\n+    user.hasOne(Job, {\n         foreignKey: \"userId\", \n       });\n   \n     return Job;\n"
                },
                {
                    "date": 1657956395927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,12 +12,11 @@\n         type: Sequelize.INTEGER,\n         allowNull: false\n       }\n     });\n-\n-    user.hasOne(Job, {\n-        foreignKey: \"userId\", \n-      });\n-  \n+ \n     return Job;\n   };\n\\ No newline at end of file\n-  \n+  \n+  user.hasOne(Job, {\n+    foreignKey: \"userId\", \n+  });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1657956587421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n         type: Sequelize.INTEGER\n       },\n       userId: {\n         type: Sequelize.INTEGER,\n-        allowNull: false\n+        allowNull: false,\n+        references: 'persons'\n       }\n     });\n  \n     return Job;\n"
                },
                {
                    "date": 1657956600170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n       },\n       userId: {\n         type: Sequelize.INTEGER,\n         allowNull: false,\n-        references: 'persons'\n+        references: 'user'\n       }\n     });\n  \n     return Job;\n"
                },
                {
                    "date": 1657956617717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n       },\n       userId: {\n         type: Sequelize.INTEGER,\n         allowNull: false,\n-        references: 'user'\n+        references: 'user',\n+        referencesKey: 'id'\n       }\n     });\n  \n     return Job;\n"
                },
                {
                    "date": 1657956625493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,5 @@\n     });\n  \n     return Job;\n   };\n-  \n-  user.hasOne(Job, {\n-    foreignKey: \"userId\", \n-  });\n\\ No newline at end of file\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1657956678017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-const user = require(\"./user.model.js\")\n \n module.exports = (sequelize, Sequelize) => {\n     const Job = sequelize.define(\"job\", {\n       name: {\n"
                },
                {
                    "date": 1657956735163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,12 @@\n       },\n       userId: {\n         type: Sequelize.INTEGER,\n         allowNull: false,\n+        references: {\n+            model: 'user', // 'fathers' refers to table name\n+            key: 'id', // 'id' refers to column name in fathers table\n+         }\n         references: 'user',\n         referencesKey: 'id'\n       }\n     });\n"
                },
                {
                    "date": 1657956824807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,12 @@\n       userId: {\n         type: Sequelize.INTEGER,\n         allowNull: false,\n         references: {\n-            model: 'user', // 'fathers' refers to table name\n-            key: 'id', // 'id' refers to column name in fathers table\n+            model: 'user', \n+            key: 'id', \n          }\n-        references: 'user',\n-        referencesKey: 'id'\n+        \n       }\n     });\n  \n     return Job;\n"
                },
                {
                    "date": 1657957016239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n       userId: {\n         type: Sequelize.INTEGER,\n         allowNull: false,\n         references: {\n-            model: 'user', \n+            model: 'users', \n             key: 'id', \n          }\n         \n       }\n"
                },
                {
                    "date": 1657962657616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,20 @@\n-\n module.exports = (sequelize, Sequelize) => {\n-    const Job = sequelize.define(\"job\", {\n-      name: {\n-        type: Sequelize.STRING\n+  const Job = sequelize.define(\"job\", {\n+    name: {\n+      type: Sequelize.STRING,\n+    },\n+    status: {\n+      type: Sequelize.INTEGER,\n+    },\n+    userId: {\n+      type: Sequelize.INTEGER,\n+      allowNull: false,\n+      references: {\n+        model: \"users\",\n+        key: \"id\",\n       },\n-      status: {\n-        type: Sequelize.INTEGER\n-      },\n-      userId: {\n\\ No newline at end of file\n-        type: Sequelize.INTEGER,\n-        allowNull: false,\n-        references: {\n-            model: 'users', \n-            key: 'id', \n-         }\n-        \n-      }\n-    });\n- \n-    return Job;\n-  };\n-  \n+    },\n+  });\n+\n+  return Job;\n+};\n"
                },
                {
                    "date": 1658021102605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n       allowNull: false,\n       references: {\n         model: \"users\",\n         key: \"id\",\n+        onDelete: 'cascade', \n+        hooks: true\n       },\n     },\n   });\n \n"
                }
            ],
            "date": 1657948310566,
            "name": "Commit-0",
            "content": "module.exports = (sequelize, Sequelize) => {\n    const Status = sequelize.define(\"status\", {\n      key: {\n        type: Sequelize.STRING\n      },\n      label: {\n        type: Sequelize.STRING\n      }\n    });\n  \n    return Status;\n  };\n  "
        }
    ]
}